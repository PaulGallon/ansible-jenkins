---

- name: Check container is running
  shell: docker ps -a -f name={{ jenkins_docker_container_name }} --format {%raw%}"table {{.Status}}"{%endraw%} | awk 'FNR == 2 {print}' | awk '{print $1}'
  register: initial_status
  until: initial_status.stdout == "Up"

- name: Change restart policy to never for jenkins
  shell: "docker update --restart no {{ jenkins_docker_container_name }}"
  when: initial_status.stdout == "Up"

- name: Container is stopped
  docker_container:
    name: "{{ jenkins_docker_container_name }}"
    image: "{{ jenkins_docker_image }}:{{ jenkins_version }}"
    published_ports: "{{ jenkins_port }}:8080"
    volumes:
      - "{{ jenkins_home }}:/var/jenkins_home"
    env:
      JAVA_OPTS: "{{ jenkins_java_opts }}"
    state: stopped

- name: Wait for container to stop
  shell: docker ps -a -f name={{ jenkins_docker_container_name }} --format {%raw%}"table {{.Status}}"{%endraw%} | awk 'FNR == 2 {print}' | awk '{print $1}'
  register: status
  until: status.stdout == "Exited"
  retries: 60
  delay: 60

- name: Change restart policy back
  shell: "docker update --restart {{jenkins_docker_restart_policy}} {{ jenkins_docker_container_name }}"
  when: initial_status.stdout == "Up"
