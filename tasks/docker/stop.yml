---

- name: Check container is running
  shell: docker ps -a -f name={{ jenkins_docker_container_name }} --format {%raw%}"table {{.Status}}"{%endraw%} | awk 'FNR == 2 {print}' | awk '{print $1}'
  register: initial_status
  until: initial_status.stdout == "Up"

- name: Change restart policy to never for jenkins
  shell: "docker update --restart no {{ jenkins_docker_container_name }}"
  when: initial_status.stdout == "Up"

- name: Hit URL for graceful shutdown (with credentials)
  uri:
    url: "http://localhost:{{ jenkins_port }}/safeExit"
    method: POST
    user: "{{ jenkins_user }}"
    password: "{{ jenkins_key }}"
    force_basic_auth: yes
  when: initial_status.stdout == "Up" and jenkins_user is defined and jenkins_key is defined

- name: Hit URL for graceful shutdown (without credentials)
  uri:
    url: "http://localhost:{{ jenkins_port }}/safeExit"
    method: POST
  when: initial_status.stdout == "Up" and ( jenkins_user is not defined or jenkins_key is not defined )

- name: Wait for container to stop
  shell: docker ps -a -f name={{ jenkins_docker_container_name }} --format {%raw%}"table {{.Status}}"{%endraw%} | awk 'FNR == 2 {print}' | awk '{print $1}'
  register: status
  until: status.stdout == "Exited"
  retries: 60
  delay: 60

- name: Change restart policy back
  shell: "docker update --restart {{jenkins_docker_restart_policy}} {{ jenkins_docker_container_name }}"
  when: initial_status.stdout == "Up"
